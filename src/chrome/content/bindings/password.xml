<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->


<bindings id="textboxBindings"
	xmlns="http://www.mozilla.org/xbl"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:xbl="http://www.mozilla.org/xbl">

	<binding id="password-textbox" extends="chrome://global/content/bindings/textbox.xml#textbox">
		<content>
			<children/>
			<xul:hbox class="textbox-input-box" flex="1" xbl:inherits="context" align="center">
				<html:input class="textbox-input" anonid="input"
										xbl:inherits="value,type,maxlength,disabled,size,readonly,placeholder,tabindex,accesskey"/>
				<xul:deck class="textbox-password-icons" anonid="password-icons">
					<xul:image	class="textbox-password-show"
											onmousedown="_showPassword(event);"
											onmouseup="_showPassword(event);"
											onmouseout="_showPassword(event);"
											xbl:inherits="disabled"/>
				</xul:deck>
			</xul:hbox>
		</content>
		<implementation>
			<field name="_timer">null</field>
			<field name="_status">false</field>
			<method name="_showPassword">
				<parameter name="event"/>
				<body><![CDATA[
					if (event.button != 0)
						return;

						let dblclick = event.detail == 2;

					if (event.type == "mousedown" && (!this._status || dblclick))
					{
						if (this._timer)
							clearTimeout(this._timer);

						let s = this.inputField.selectionStart,
								e = this.inputField.selectionEnd,
								confirm = this.getAttribute("confirm");
						confirm = confirm ? document.getElementById(confirm) : false;
						this.inputField.type = "";
						this.inputField.selectionStart = s;
						this.inputField.selectionEnd = e;
						this.setAttribute("show", true);
						if (confirm)
						{
							confirm.disabled = true;
						}
						this._status = dblclick;
					}
					else if (!dblclick && (event.type != "mouseout"
																|| (event.type == "mouseout" && !this._status)))
					{
						if (this._timer)
							clearTimeout(this._timer);

						let func = function(me)
						{
							let s = me.inputField.selectionStart,
									e = me.inputField.selectionEnd,
									confirm = me.getAttribute("confirm");
							confirm = confirm ? document.getElementById(confirm) : false;
							me._status = false;
							me.inputField.type = "password";
							me.inputField.selectionStart = s;
							me.inputField.selectionEnd = e;
							me.removeAttribute("show");
							if (confirm)
							{
								confirm.disabled = false;
							}
						}
/*
						if (event.type == "mouseup")
							this._timer = setTimeout(func, 100, this);
						else
*/
							func(this);
					}

				]]></body>
			</method>
		</implementation>

	</binding>
</bindings>
